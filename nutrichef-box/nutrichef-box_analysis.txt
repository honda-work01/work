### プロジェクト概要

**NutriChef Box** は、レシピ、食材の在庫、買い物リストを管理するためのウェブアプリケーションです。ブラウザ上で動作し、サーバーを必要としない「ローカル完結型」のツールです。PWA（プログレッシブウェブアプリ）として作られており、スマートフォンやPCにインストールしてオフラインでも使用できることを目指しています。

### 主な機能

1.  **レシピ管理:**
    *   レシピをタイトル、内容、材料付きで登録できます。
    *   レシピの内容はMarkdown形式で記述できます。
    *   登録したレシピの編集や削除が可能です。

2.  **在庫管理:**
    *   手持ちの食材とその数量を「在庫」として登録・管理できます。
    *   在庫の数量を編集したり、使い切ったものを削除したりできます。

3.  **買い物リストの自動生成:**
    *   登録されている全レシピの材料と、現在の在庫を比較します。
    *   在庫が不足している食材を自動的に抽出し、「買い物リスト」として表示します。

4.  **栄養素グラフ:**
    *   登録されている全レシピの材料から、炭水化物、タンパク質、脂質の三大栄養素の合計を計算します。
    *   計算結果を円グラフで可視化し、栄養バランスの概要を把握できます。

### 技術的な特徴

*   **データ保存:** サーバーを使わず、ブラウザの **IndexedDB** という機能に全てのデータ（レシピ、在庫情報など）を保存します。これにより、オフラインでも動作します。
*   **フロントエンド:** HTML, CSS, JavaScriptのみで構築されています。特別なフレームワークは使われていませんが、グラフ表示のために`Chart.js`、Markdownの表示のために`marked`というライブラリを利用しています。
*   **PWA対応:** `manifest.json`とサービスワーカー(`sw.js`)が含まれており、PWAとしての基本的な設定がされています。これにより、アプリをホーム画面に追加したり、オフラインでの利用が可能になります（ただし、`sw.js`のオフラインキャッシュ機能はまだ実装されていないようです）。

### 現状と今後の開発

*   `requirements.md`（要件定義書）によると、将来的にはIndexedDBのデータを暗号化するセキュリティ機能や、データをZIPファイルとしてバックアップする機能が構想されています。
*   `sw.js`（サービスワーカー）には「オフラインキャッシュ戦略は後で実装」とコメントがあり、完全なオフライン対応は今後の課題のようです。
*   現状では、レシピ、在庫、買い物リストの基本的な機能と栄養素の可視化が実装されています。

ご希望であれば、さらに特定の機能について詳しく説明したり、コードを修正・改善することも可能です。